name: Deploy SQS-Lambda Stack

on:
  push:
    branches: [main]
    paths:
      - 'aws/cdk/**'
      - '.github/workflows/cdk-deploy.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'aws/cdk/package-lock.json'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: npm ci
        working-directory: ./aws/cdk

      - name: Clean up failed bootstrap (if exists)
        run: |
          # Try to delete the failed bootstrap stack if it exists in us-west-2
          aws cloudformation delete-stack --stack-name CDKToolkit --region us-west-2 || true
          # Wait a bit for the deletion to complete or fail
          sleep 10
        continue-on-error: true

      - name: Bootstrap us-west-2 region
        run: npx cdk bootstrap --force aws://account/us-west-2
        working-directory: ./aws/cdk
        env:
          CDK_NEW_BOOTSTRAP: "1"
          AWS_REGION: us-west-2

      - name: CDK Deploy
        run: npx cdk deploy --require-approval never
        working-directory: ./aws/cdk
        env:
          AWS_REGION: us-west-2
          VERCEL_APP_URL: ${{ secrets.VERCEL_APP_URL }}
          LAMBDA_API_KEY: ${{ secrets.LAMBDA_API_KEY }}
          EMAIL_QUEUE_URL: ${{ secrets.EMAIL_QUEUE_URL }} 