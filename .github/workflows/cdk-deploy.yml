name: Deploy SQS-Lambda Stack

on:
  push:
    branches: [main]
    paths:
      - 'aws/cdk/**'
      - '.github/workflows/cdk-deploy.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'aws/cdk/package-lock.json'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install dependencies
        run: npm ci
        working-directory: ./aws/cdk

      - name: Check if bootstrap is needed
        id: check-bootstrap
        run: |
          # Always bootstrap to ensure it's properly set up
          echo "needs_bootstrap=true" >> $GITHUB_OUTPUT
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Bootstrap with exact account and region
        if: steps.check-bootstrap.outputs.needs_bootstrap == 'true'
        run: |
          echo "Bootstrapping AWS environment in region ${{ secrets.AWS_REGION }}..."
          npx cdk bootstrap "aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}" --force --no-execute
          npx cdk bootstrap "aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}" --force
        working-directory: ./aws/cdk
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      
      - name: CDK Deploy
        run: npx cdk deploy --require-approval never
        working-directory: ./aws/cdk
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          CDK_DEPLOY_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEPLOY_REGION: ${{ secrets.AWS_REGION }}
          VERCEL_APP_URL: ${{ secrets.VERCEL_APP_URL }}
          LAMBDA_API_KEY: ${{ secrets.LAMBDA_API_KEY }}
          EMAIL_QUEUE_URL: ${{ secrets.EMAIL_QUEUE_URL }} 
